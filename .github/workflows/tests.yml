# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Start mongo
      run: docker-compose up -d
    - name: Build image
      run: docker build . -t meal-diary/backend
    - name: Run tests
      env:
        AUTH0_CLIENT_ID: ${{secrets.AUTH0_CLIENT_ID}}
        AUTH0_DOMAIN: ${{secrets.AUTH0_DOMAIN}}
        AUTH0_CLIENT_SECRET: ${{secrets.AUTH0_CLIENT_SECRET}}
        AUTH0_USER_AUDIENCE: ${{secrets.AUTH0_USER_AUDIENCE}}
        AUTH0_AUDIENCE: ${{secrets.AUTH0_AUDIENCE}}
        AUTH0_TEST_TOKEN_URL: ${{secrets.AUTH0_TEST_TOKEN_URL}}
        AUTH0_TEST_CLIENT_ID: ${{secrets.AUTH0_TEST_CLIENT_ID}}
        AUTH0_TEST_CLIENT_SECRET: ${{secrets.AUTH0_TEST_CLIENT_SECRET}}
        AUTH0_TEST_AUDIENCE: ${{secrets.AUTH0_TEST_AUDIENCE}}
        AUTH0_TEST_GRANT_TYPE: ${{secrets.AUTH0_TEST_GRANT_TYPE}}
      run: docker run 
        --network container:ci_mongo 
        -e AUTH0_CLIENT_ID="${AUTH0_CLIENT_ID}"
        -e AUTH0_DOMAIN="${AUTH0_DOMAIN}"
        -e AUTH0_CLIENT_SECRET="${AUTH0_CLIENT_SECRET}"
        -e AUTH0_USER_AUDIENCE="${AUTH0_USER_AUDIENCE}"
        -e AUTH0_AUDIENCE="${AUTH0_AUDIENCE}"
        -e MONGO_URI=mongodb://localhost:27017
        -e APP_NAME=test
        -e RUN_FINELI_TASK_ON_START=false
        -e AUTH0_TEST_TOKEN_URL="${AUTH0_TEST_TOKEN_URL}"
        -e AUTH0_TEST_CLIENT_ID="${AUTH0_TEST_CLIENT_ID}"
        -e AUTH0_TEST_CLIENT_SECRET="${AUTH0_TEST_CLIENT_SECRET}"
        -e AUTH0_TEST_AUDIENCE="${AUTH0_TEST_AUDIENCE}"
        -e AUTH0_TEST_GRANT_TYPE="${AUTH0_TEST_GRANT_TYPE}"
        -e PORT=4000
        meal-diary/backend 
        npm run test:ci
